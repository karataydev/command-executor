name: command-executor
on:
  push:
    tags:
      - "v*"
    branches:
      - 'master'

jobs:
  build-jar-job:
    name: 'Build JAR'
    runs-on: ubuntu-latest

    steps:

      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Setup Java 21'
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: 21
      
      - name: 'Build JAR'
        run: |
          ./gradlew build

      - name: 'Get Version Number'
        run: echo "VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')" >> $GITHUB_ENV

      - name: 'Publish JAR'
        uses: actions/upload-artifact@v4
        with:
          name: 'command-executor-${{env.VERSION}}-all.jar'
          path: app/build/libs/*-all.jar

      - name: 'Create Release'
        if: contains(github.ref, 'v')
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag: ${{github.ref}}
          name: Release ${{github.ref}}
          body: |
            Initial release
          draft: false
          prerelease: false
          token: ${{secrets.GITHUB_TOKEN}}

      - name: 'Upload Release Asset'
        if: contains(github.ref, 'v')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: app/build/libs/command-executor-all.jar
          asset_name: command-executor-${{env.VERSION}}-all.jar
          asset_content_type: application/java-archive


      - name: 'Write Upload URL To File'
        if: contains(github.ref, 'v')
        run: |
          echo "${{steps.create_release.outputs.upload_url}}" > upload_url.txt

      - name: 'Publish Upload URL'
        if: contains(github.ref, 'v')
        uses: actions/upload-artifact@v4
        with:
          name: 'upload_url.txt'
          path: 'upload_url.txt'


  build-non-windows-image:
    name: 'Build Non-Windows Image'
    needs: [build-jar-job]
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest']
        include:
          - os: 'ubuntu-latest'
            label: 'linux'
          - os: 'macos-latest'
            label: 'mac'
    runs-on: ${{matrix.os}}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Setup Java 21'
        uses: actions/setup-java@v4
        with:
          distribution: 'fraal'
          java-version: 21

      - name: 'Get Version Number'
        run: echo "VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')" >> $GITHUB_ENV

      - name: 'Get JAR Artifact'
        uses: actions/download-artifact@v4
        with:
          name: 'command-executor-${{env.VERSION}}-all.jar'

      - name: 'Get Release URL'
        if: contains(github.ref, 'v')
        uses: actions/download-artifact@v4
        with:
          name: 'upload_url.txt'

      - name: 'Get Upload URL'
        if: contains(github.ref, 'v')
        run: echo "UPLOAD_URL=$(cat upload_url.txt)" >> $GITHUB_ENV

      - name: 'Build Native Image'
        run: |
          native-image -jar command-executor-${{env.VERSION}}-all.jar command-executor

      - name: 'Publish Native Image'
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: 'command-executor-${{matrix.label}}'
          path: 'command-executor'

      - name: 'Release Native Image Asset'
        if: success() && contains(github.ref, 'v')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{env.UPLOAD_URL}}
          asset_name: 'command-executor-${{matrix.label}}'
          asset_path: 'command-executor'
          asset_content_type: application/octet-stream
